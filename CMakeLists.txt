cmake_minimum_required(VERSION 2.8 FATAL_ERROR)

# must be done BEFORE project in order to work!
include(cmake/install_prefix.cmake)

set( CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/cmake" )
include( cmake/cxx11.cmake )
check_for_cxx11_compiler( HAVE_CXX11 )
include( cmake/dist.cmake )
include( cmake/LinuxDistribution.cmake )
include( cmake/build_rules.cmake )
include( cmake/boost.cmake )
include( cmake/find_strus_package.cmake )
include( cmake/find_tre.cmake )
include( cmake/find_leveldb.cmake )
include( cmake/link_rules.cmake )
include( cmake/intl.cmake )
include( cmake/libdl.cmake )
include( cmake/cppcheck.cmake )

if (WITH_STRUS_PATTERN STREQUAL "YES")
include( cmake/find_hyperscan.cmake )
endif (WITH_STRUS_PATTERN STREQUAL "YES")

find_package( Threads )
set( STRUS_ALL 1 )

set( strusbase_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/strusBase/include  ${CMAKE_CURRENT_BINARY_DIR}/strusBase/include )
set( strusbase_LIBRARY_DIRS ${CMAKE_CURRENT_BINARY_DIR}/strusBase )
set( strus_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/strus/include ${CMAKE_CURRENT_BINARY_DIR}/strus/include )
set( strus_LIBRARY_DIRS ${CMAKE_CURRENT_BINARY_DIR}/strus )
set( strusanalyzer_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/strusAnalyzer/include ${CMAKE_CURRENT_BINARY_DIR}/strusAnalyzer/include )
set( strusanalyzer_LIBRARY_DIRS ${CMAKE_CURRENT_BINARY_DIR}/strusAnalyzer )
set( strustrace_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/strusTrace/include ${CMAKE_CURRENT_BINARY_DIR}/strusTrace/include )
set( strustrace_LIBRARY_DIRS ${CMAKE_CURRENT_BINARY_DIR}/strusTrace )
set( strusmodule_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/strusModule/include ${CMAKE_CURRENT_BINARY_DIR}/strusModule/include )
set( strusmodule_LIBRARY_DIRS ${CMAKE_CURRENT_BINARY_DIR}/strusModule )
set( strusrpc_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/strusRpc/include ${CMAKE_CURRENT_BINARY_DIR}/strusRpc/include )
set( strusrpc_LIBRARY_DIRS ${CMAKE_CURRENT_BINARY_DIR}/strusRpc )
set( strusutilities_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/strusUtilities/include ${CMAKE_CURRENT_BINARY_DIR}/strusUtilities/include )
set( strusutilities_LIBRARY_DIRS ${CMAKE_CURRENT_BINARY_DIR}/strusUtilities )
set( strusbindings_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/strusBindings/include ${CMAKE_CURRENT_BINARY_DIR}/strusBindings/include )
set( strusbindings_LIBRARY_DIRS ${CMAKE_CURRENT_BINARY_DIR}/strusBindings )

enable_testing( )

include( cmake/report_build_settings.cmake )

add_subdirectory( strusBase )
add_subdirectory( strus )
add_subdirectory( strusAnalyzer )
add_subdirectory( strusTrace )
add_subdirectory( strusModule )
if ( STRUS_MODULE_PATH )
message( WARNING "Definition of STRUS_MODULE_PATH passed to cmake is ignored, modules are all built locally, no external references" )
endif ( STRUS_MODULE_PATH )
set( STRUS_MODULE_PATH "${CMAKE_BINARY_DIR}/modules/strus" )

if(WITH_STRUS_VECTOR STREQUAL "YES")
	set( strusvector_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/strusVector/include )
	add_subdirectory( strusVector )
	set( STRUS_VECTOR_BINARY_DIR "${PROJECT_BINARY_DIR}/strusVector/src" )
endif()
if(WITH_STRUS_PATTERN STREQUAL "YES")
        set( struspattern_INCLUDE_DIRS ${PROJECT_SOURCE_DIR}/strusPattern/include )
        add_subdirectory( strusPattern )
	set( STRUS_PATTERN_BINARY_DIR "${PROJECT_BINARY_DIR}/strusPattern/src" )
	if( DEFINED HYPERSCAN_PKGCONFIG )
		file( COPY  "${HYPERSCAN_PKGCONFIG}"  DESTINATION  ${CMAKE_BINARY_DIR}/ )
		# ... PF:HACK For hyperscan as submodule with out of source build
	endif( DEFINED HYPERSCAN_PKGCONFIG )
endif(WITH_STRUS_PATTERN STREQUAL "YES")
add_subdirectory( strusRpc )
add_subdirectory( strusUtilities )
# temporarily disabled
add_subdirectory( strusBindings )

